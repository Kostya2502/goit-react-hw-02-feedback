{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/section/Section.js","components/statistics/Statistics.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","uuidv4","Notification","message","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","e","target","setState","prevState","this","objKey","Object","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAceA,EAVS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,mCACKD,EAAQE,KAAI,SAACC,GAAD,OACT,wBAAQC,KAAK,SAASC,KAAMF,EAAuBG,QAASL,EAA5D,SAA8EE,GAArCI,qBCC1CC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,6BAAKA,KCOEC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qCACI,6BAAKD,IACJC,MCQEC,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACI,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,uDAA0BC,EAA1B,YCJSC,E,4MACjBC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTK,mBAAqB,WAAO,IAAD,EACQ,EAAKD,MAEpC,OAHuB,EACfN,KADe,EACTC,QADS,EACAC,K,EAK3BM,gCAAkC,WAAO,IAG/BJ,EAA8B,IAFnB,EAAKE,MAAdN,KACM,EAAKO,qBAEnB,OAAOE,KAAKC,MAAMN,I,EAGtBjB,gBAAkB,SAACwB,GACf,IAAMpB,EAAOoB,EAAEC,OAAOrB,KACtB,EAAKsB,UAAS,SAACC,GAAD,sBAAmBvB,EAAOuB,EAAUvB,GAAQ,O,uDAGpD,IAAD,EAC0BwB,KAAKT,MAA5BN,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IACjBC,EAAQY,KAAKR,qBACbH,EAAqBW,KAAKP,kCAC1BQ,EAASC,OAAOC,KAAKH,KAAKT,OAEhC,OACI,qCACI,cAAC,EAAD,CAAST,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBX,QAAS8B,EAAQ7B,gBAAiB4B,KAAK5B,oBAGjD,IAAVgB,EACG,cAAC,EAAD,CAAcR,QAAQ,sBAElB,cAAC,EAAD,CAASE,MAAM,aAAf,SACI,cAAC,EAAD,CACIG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA9CnBe,a,MCDjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.318cbf07.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            {options.map((option) => (\r\n                <button type=\"button\" name={option} key={uuidv4()} onClick={onLeaveFeedback}>{option}</button>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    onLeaveFeedback: PropTypes.func,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <h2>{message}</h2>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <li>Good: {good}</li>\r\n            <li>Neutral: {neutral}</li>\r\n            <li>Bad: {bad}</li>\r\n            <li>Total: {total}</li>\r\n            <li>Positive Percentage: {positivePercentage} %</li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import React, { Component } from 'react';\r\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\r\nimport Notification from \"./notification/Notification\";\r\nimport Section from \"./section/Section\";\r\nimport Statistics from \"./statistics/Statistics\";\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        const result = good + neutral + bad;\r\n        return result\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        const total = this.countTotalFeedback();\r\n        const positivePercentage = ((good * 100) / total);\r\n        return Math.round(positivePercentage)\r\n    }\r\n\r\n    onLeaveFeedback = (e) => {\r\n        const name = e.target.name;\r\n        this.setState((prevState) => ({ [name]: prevState[name] + 1 }))\r\n    }\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        const total = this.countTotalFeedback();\r\n        const positivePercentage = this.countPositiveFeedbackPercentage();\r\n        const objKey = Object.keys(this.state);\r\n\r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions options={objKey} onLeaveFeedback={this.onLeaveFeedback} />\r\n                </Section>\r\n\r\n                {total === 0 ? (\r\n                    <Notification message=\"No feedback given\" />\r\n                ) : (\r\n                        <Section title=\"Statistics\">\r\n                            <Statistics\r\n                                good={good}\r\n                                neutral={neutral}\r\n                                bad={bad}\r\n                                total={total}\r\n                                positivePercentage={positivePercentage}\r\n                            />\r\n                        </Section>\r\n                    )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'),);"],"sourceRoot":""}